name: Publish Package

on:
  workflow_dispatch:
    inputs:
      pre:
        description: 'Is this a NEW pre-release?'
        required: false
        default: false
        type: boolean
      level:
        description: 'Release level'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - preup

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
      checks: write
      deployments: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
      id-token: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Release @nuco/variable
        run: |
          if [ "${{ github.event.inputs.pre }}" == "true" ]; then
            pnpm p:variable release --level ${{ github.event.inputs.level }} --pre
          else
            pnpm p:variable release --level ${{ github.event.inputs.level }}
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get Current package info
        id: get-package-info
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./packages/variable/package.json').version")" >> $GITHUB_OUTPUT

      - name: Release Core libraries
        run: |
          pnpm p:core release --level fix --release-version ${{ steps.get-package-info.outputs.PACKAGE_VERSION }} -k create-release-branch,build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release Framework libraries
        run: |
          pnpm p:react release --level fix --release-version ${{ steps.get-package-info.outputs.PACKAGE_VERSION }} -k create-release-branch,build
          # pnpm p:vue release --level fix --release-version ${{ steps.get-package-info.outputs.PACKAGE_VERSION }} -k create-release-branch,build
          # pnpm p:svelte release --level fix --release-version ${{ steps.get-package-info.outputs.PACKAGE_VERSION }} -k create-release-branch,build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Pull Request
        run: |
          gh pr create \
            --title "Release v${{ steps.get-package-info.outputs.PACKAGE_VERSION }}" \
            --body "Release v${{ steps.get-package-info.outputs.PACKAGE_VERSION }}  This PR was automatically generated by the release workflow." \
            --base main \
            --reviewer takuma-ru \
            --label ":rocket: release" \
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create-release
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ steps.get-package-info.outputs.PACKAGE_VERSION }}
          prerelease: ${{ contains(steps.get-package-info.outputs.PACKAGE_VERSION, '-beta') }}

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocsImport } from './routes/docs'
import { Route as IndexImport } from './routes/index'
import { Route as DocsIndexImport } from './routes/docs/index'
import { Route as DocsGettingStartedWebComponentsImport } from './routes/docs/getting-started/web-components'

// Create/Update Routes

const DocsRoute = DocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DocsIndexRoute = DocsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocsRoute,
} as any)

const DocsGettingStartedWebComponentsRoute =
  DocsGettingStartedWebComponentsImport.update({
    id: '/getting-started/web-components',
    path: '/getting-started/web-components',
    getParentRoute: () => DocsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsImport
      parentRoute: typeof rootRoute
    }
    '/docs/': {
      id: '/docs/'
      path: '/'
      fullPath: '/docs/'
      preLoaderRoute: typeof DocsIndexImport
      parentRoute: typeof DocsImport
    }
    '/docs/getting-started/web-components': {
      id: '/docs/getting-started/web-components'
      path: '/getting-started/web-components'
      fullPath: '/docs/getting-started/web-components'
      preLoaderRoute: typeof DocsGettingStartedWebComponentsImport
      parentRoute: typeof DocsImport
    }
  }
}

// Create and export the route tree

interface DocsRouteChildren {
  DocsIndexRoute: typeof DocsIndexRoute
  DocsGettingStartedWebComponentsRoute: typeof DocsGettingStartedWebComponentsRoute
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsIndexRoute: DocsIndexRoute,
  DocsGettingStartedWebComponentsRoute: DocsGettingStartedWebComponentsRoute,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/docs': typeof DocsRouteWithChildren
  '/docs/': typeof DocsIndexRoute
  '/docs/getting-started/web-components': typeof DocsGettingStartedWebComponentsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs': typeof DocsIndexRoute
  '/docs/getting-started/web-components': typeof DocsGettingStartedWebComponentsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/docs': typeof DocsRouteWithChildren
  '/docs/': typeof DocsIndexRoute
  '/docs/getting-started/web-components': typeof DocsGettingStartedWebComponentsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/docs' | '/docs/' | '/docs/getting-started/web-components'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/docs' | '/docs/getting-started/web-components'
  id:
    | '__root__'
    | '/'
    | '/docs'
    | '/docs/'
    | '/docs/getting-started/web-components'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocsRoute: typeof DocsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocsRoute: DocsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/docs"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/docs": {
      "filePath": "docs.tsx",
      "children": [
        "/docs/",
        "/docs/getting-started/web-components"
      ]
    },
    "/docs/": {
      "filePath": "docs/index.tsx",
      "parent": "/docs"
    },
    "/docs/getting-started/web-components": {
      "filePath": "docs/getting-started/web-components.tsx",
      "parent": "/docs"
    }
  }
}
ROUTE_MANIFEST_END */
